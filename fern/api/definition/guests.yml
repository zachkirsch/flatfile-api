# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: ""
  endpoints: 
    list:
      path: /guests
      method: GET
      docs: Returns all guests
      display-name: List guests
      request:
        name: ListGuestsRequest
        query-parameters:
          spaceId:
            docs: ID of space to return
            type: commons.SpaceId 
      response: ListGuestsResponse

    create:
      path: /guests
      method: POST
      docs: >-
        Guests are only there to upload, edit, and download files and perform
        their tasks in a specific Space.
      display-name: Create a guest
      request: list<GuestConfig>
      response: list<Guest>

    get:
      path: /guests/{guestId}
      method: GET
      docs: Returns a single guest
      display-name: Get a guest
      path-parameters:
        guestId:
          docs: ID of guest to return
          type: commons.GuestId
      response: Guest

    delete:
      path: /guests/{guestId}
      method: DELETE
      docs: Deletes a single guest
      display-name: Delete a guest
      path-parameters:
        guestId:
          docs: ID of guest to return
          type: commons.GuestId
      response: commons.Success

    update:
      path: /guests/{guestId}
      method: PATCH
      docs: Updates a single guest, for example to change name or email
      display-name: Update a guest
      path-parameters:
        guestId:
          docs: ID of guest to return
          type: commons.GuestId
      request: GuestConfig
      response: Guest

    invite:
      path: /invitations
      method: POST
      docs: >-
        Guests can be created as a named guest on the Space or thereâ€™s a global
        link that will let anonymous guests into the space.
      display-name: Invite guests
      request: list<Invite>
      response: commons.Success

types: 
  ListGuestsResponse: 
    properties: 
      data: optional<list<Guest>>

  Guest: 
    extends: GuestConfig
    properties: 
      id: commons.GuestId

  GuestConfig: 
    docs: Configurations for the guests
    properties:
      environmentId: commons.EnvironmentId
      email: string 
      name: string 
      spaces: list<GuestSpace>
  
  GuestSpace: 
    properties: 
      id: commons.SpaceId
      lastAccessed: optional<datetime>

  ApiTokens: 
    docs: List of api tokens without secrets
    properties:
      pagination: optional<commons.Pagination>
      data: list<commons.ApiToken>

  Invite: 
    properties:
      guestId: commons.GuestId 
      spaceId: commons.SpaceId 
      message: 
        type: string
        docs:  Message to send with the invite
        