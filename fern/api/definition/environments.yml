# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
  agents: agents.yml

service:
  auth: false
  base-path: /environments
  endpoints:
    list:
      path: ""
      method: GET
      docs: Get all environments
      display-name: List environments
      response: ListEnvironmentsResponse

    create:
      path: ""
      method: POST
      docs: Create a new environment
      display-name: Create an environment
      request: EnvironmentConfig
      response: Environment

    get:
      path: /{environmentId}
      method: GET
      docs: Returns a single environment
      display-name: Get an environment
      path-parameters:
        environmentId:
          docs: ID of the environment to return
          type: string
      response: Environment

    update:
      path: /{environmentId}
      method: PATCH
      docs: Updates a single environment, to change the name for example
      display-name: Update an environment
      path-parameters:
        environmentId:
          docs: ID of the environment to update
          type: string
      request: EnvironmentConfig
      response: Environment

    getAllAgentLogs:
      path: /{environmentId}/logs
      method: GET
      display-name: Get all agent logs for an environment
      path-parameters:
        environmentId: string
      request:
        name: GetAllAgentLogsRequest
        query-parameters:
          pageSize:
            docs: Number of logs to return in a page (default 20)
            type: optional<integer>
          pageNumber:
            docs: Based on pageSize, which page of records to return
            type: optional<integer>
      response: agents.AgentLogs

types:
  ListEnvironmentsResponse:
    properties:
      data: optional<list<Environment>>
  
  EnvironmentResponse:
    properties:
      data: optional<Environment>
  
  Environment: 
    extends: EnvironmentConfig
    properties: 
      id: commons.EnvironmentId
      accountId: optional<commons.AccountId>

  EnvironmentConfig:
    docs: Properties used to create a new environment
    properties:
      name:
        docs: The name of the environment
        type: string
      isProd:
        docs: Whether or not the environment is a production environment
        type: boolean
      newSpacesInherit:
        docs: >-
          Whether or not new spaces have the option to copy files and guests
          from existing spaces, defaults to false
        type: optional<boolean>
      guestAuthentication: optional<list<GuestAuthentication>>

  GuestAuthentication:
    docs: The type of authentication to use for guests
    enum:
      - shared_link
      - magic_link
